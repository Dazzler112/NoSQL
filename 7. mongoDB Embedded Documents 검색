Embedded Documents 검색
embedded Document란 auther Field처럼 Document 안 배열 형태로 있는 Document 를 말한다.

-----------------------------------------------------------------------------------------------------------------------------------
예시)
>db.book.find().pretty()
{
      "_id" : ObbjectId("618e31a4146987b7eccef3"),
      "name" : "A",
      "hits" : 500,
      "auther" : [
              {
                  "name" : "park"                           <== "auther"라고 돼있는 이필드 부분 전부("네임":네임명)부분
              },
              {
                  "name" : "lee"
              }
      ]
}
{
      "_id" : ObbjectId("618e31a4146987b7eccef4"),
      "name" : "B",
      "hits" : 50,
      "auther" : [
              {
                  "name" : "kim"                           <== "auther"라고 돼있는 이필드 부분 전부("네임":네임명)부분                  
              }
      ]
}
{
      "_id" : ObbjectId("618e31a4146987b7eccef5"),
      "name" : "C",
      "hits" : 30,
      "auther" : [
              {
                  "name" : "kim"                           <== "auther"라고 돼있는 이필드 부분 전부("네임":네임명)부분
              },
              {
                  "name" : "choi"
              }
      ]
}
 
-----------------------------------------------------------------------------------------------------------------------------------


$elemMatch
$elemMatch는 조건이 배열 안의 요소와 일치하는 필드를 선택합니다.
-----------------------------------------------------------------------------------------------------------------------------------
db.book.find({
    "auther":{
   		$elemMatch: {"name":"park"} // auther배열객체 들 중에서 {"name":"park"} 검색.
    }
})

예시)---------------------------------------------------------------
> db.book.find({"auther":{$elemMatch:{"name":"park"}}}).pretty()
{
        "_id" : ObjectId("5b7cch15a45a717920ed8332"),
        "name" : "A",
        "hits" : 100,
        "auther" : [
                 {
                         "name" : "park"
                 },
                 {
                         "name" : "lee"
                 }
        ]
}
----------------------------------------------------------------------
-----------------------------------------------------------------------------------------------------------------------------------
